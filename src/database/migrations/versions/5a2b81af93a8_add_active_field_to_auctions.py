"""Add active field to auctions

Revision ID: 5a2b81af93a8
Revises: 99d0a9539c1e
Create Date: 2025-02-02 23:14:10.720667

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5a2b81af93a8'
down_revision: Union[str, None] = '99d0a9539c1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Add active column as nullable first
    with op.batch_alter_table('auctions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.Boolean(), nullable=True))
        batch_op.drop_index('idx_auction_id_realm_id')
        batch_op.create_index(batch_op.f('ix_auctions_active'), ['active'], unique=False)
    
    # Update existing rows to set active=True
    op.execute("UPDATE auctions SET active = TRUE")
    
    # Now make the column NOT NULL
    with op.batch_alter_table('auctions', schema=None) as batch_op:
        batch_op.alter_column('active', existing_type=sa.Boolean(), nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auctions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auctions_active'))
        batch_op.create_index('idx_auction_id_realm_id', ['auction_id', 'connected_realm_id'], unique=1)
        batch_op.drop_column('active')

    # ### end Alembic commands ###
